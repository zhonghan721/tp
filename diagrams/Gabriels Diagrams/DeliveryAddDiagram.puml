@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeliveryAddCommandParser" as DeliveryAddCommandParser LOGIC_COLOR
participant ":DeliveryAddDescriptor" as DeliveryAddDescriptor LOGIC_COLOR
participant "d:DeliveryAddCommand" as DeliveryAddCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Delivery" as Delivery MODEL_COLOR
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute(input)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(input)
activate AddressBookParser

create DeliveryAddCommandParser
AddressBookParser -> DeliveryAddCommandParser
activate DeliveryAddCommandParser
DeliveryAddCommandParser --> AddressBookParser
deactivate DeliveryAddCommandParser


AddressBookParser -> DeliveryAddCommandParser : parse(args)
activate DeliveryAddCommandParser

create DeliveryAddDescriptor
DeliveryAddCommandParser -> DeliveryAddDescriptor
activate DeliveryAddDescriptor
DeliveryAddDescriptor --> DeliveryAddCommandParser
deactivate DeliveryAddDescriptor

create DeliveryAddCommand
DeliveryAddCommandParser -> DeliveryAddCommand
activate DeliveryAddCommand
DeliveryAddCommand --> DeliveryAddCommandParser : d
deactivate DeliveryAddCommand

DeliveryAddCommandParser --> AddressBookParser : d
deactivate DeliveryAddCommandParser
DeliveryAddCommandParser -[hidden]-> DeliveryAddDescriptor
destroy DeliveryAddCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser
LogicManager -> DeliveryAddCommand : execute(model)
activate DeliveryAddCommand

DeliveryAddCommand -> Model : getUserLoginStatus()
activate Model
Model --> DeliveryAddCommand : userLoginStatus
deactivate Model

DeliveryAddCommand -> DeliveryAddCommand : createDelivery(model, deliveryAddDescriptor)
activate DeliveryAddCommand

create Delivery
DeliveryAddCommand -> Delivery

activate Delivery
Delivery --> DeliveryAddCommand : toAdd

deactivate Delivery
DeliveryAddCommand --> DeliveryAddCommand : toAdd
deactivate DeliveryAddCommand

DeliveryAddCommand -> Model : addDelivery(toAdd)
activate Model
deactivate Model

create CommandResult
DeliveryAddCommand -> CommandResult
activate CommandResult
CommandResult --> DeliveryAddCommand : result
deactivate CommandResult

DeliveryAddCommand --> LogicManager : result
deactivate DeliveryAddCommand

DeliveryAddCommand -[hidden]-> LogicManager
destroy DeliveryAddCommand

[<--LogicManager : result
deactivate LogicManager


@enduml
